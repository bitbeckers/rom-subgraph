// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedImplementation extends ethereum.Event {
  get params(): AddedImplementation__Params {
    return new AddedImplementation__Params(this);
  }
}

export class AddedImplementation__Params {
  _event: AddedImplementation;

  constructor(event: AddedImplementation) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get romImplementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewRiteOfMoloch extends ethereum.Event {
  get params(): NewRiteOfMoloch__Params {
    return new NewRiteOfMoloch__Params(this);
  }
}

export class NewRiteOfMoloch__Params {
  _event: NewRiteOfMoloch;

  constructor(event: NewRiteOfMoloch) {
    this._event = event;
  }

  get cohortContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get deployer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get implementation(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get membershipCriteria(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get stakingAsset(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get treasury(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get threshold(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get assetAmount(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get stakeDuration(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get sbtUrl(): string {
    return this._event.parameters[9].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdatedHatsProtocol extends ethereum.Event {
  get params(): UpdatedHatsProtocol__Params {
    return new UpdatedHatsProtocol__Params(this);
  }
}

export class UpdatedHatsProtocol__Params {
  _event: UpdatedHatsProtocol;

  constructor(event: UpdatedHatsProtocol) {
    this._event = event;
  }

  get oldHatsProtocol(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newHatsProtocol(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdatedSustainabilityFee extends ethereum.Event {
  get params(): UpdatedSustainabilityFee__Params {
    return new UpdatedSustainabilityFee__Params(this);
  }
}

export class UpdatedSustainabilityFee__Params {
  _event: UpdatedSustainabilityFee;

  constructor(event: UpdatedSustainabilityFee) {
    this._event = event;
  }

  get oldSustainabilityFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newSustainabilityFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdatedSustainabilityTreasury extends ethereum.Event {
  get params(): UpdatedSustainabilityTreasury__Params {
    return new UpdatedSustainabilityTreasury__Params(this);
  }
}

export class UpdatedSustainabilityTreasury__Params {
  _event: UpdatedSustainabilityTreasury;

  constructor(event: UpdatedSustainabilityTreasury) {
    this._event = event;
  }

  get oldSustainabilityTreasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newSustainabilityTreasury(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RiteOfMolochFactory extends ethereum.SmartContract {
  static bind(address: Address): RiteOfMolochFactory {
    return new RiteOfMolochFactory("RiteOfMolochFactory", address);
  }

  hatsProtocol(): Address {
    let result = super.call("hatsProtocol", "hatsProtocol():(address)", []);

    return result[0].toAddress();
  }

  try_hatsProtocol(): ethereum.CallResult<Address> {
    let result = super.tryCall("hatsProtocol", "hatsProtocol():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  iid(): BigInt {
    let result = super.call("iid", "iid():(uint256)", []);

    return result[0].toBigInt();
  }

  try_iid(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("iid", "iid():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  implementations(param0: BigInt): Address {
    let result = super.call(
      "implementations",
      "implementations(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_implementations(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementations",
      "implementations(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sustainabilityFee(): BigInt {
    let result = super.call(
      "sustainabilityFee",
      "sustainabilityFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_sustainabilityFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sustainabilityFee",
      "sustainabilityFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sustainabilityTreasury(): Address {
    let result = super.call(
      "sustainabilityTreasury",
      "sustainabilityTreasury():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_sustainabilityTreasury(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "sustainabilityTreasury",
      "sustainabilityTreasury():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _hatsProtocol(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _sustainabilityTreasury(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _sustainabilityFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get owner(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddImplementationCall extends ethereum.Call {
  get inputs(): AddImplementationCall__Inputs {
    return new AddImplementationCall__Inputs(this);
  }

  get outputs(): AddImplementationCall__Outputs {
    return new AddImplementationCall__Outputs(this);
  }
}

export class AddImplementationCall__Inputs {
  _call: AddImplementationCall;

  constructor(call: AddImplementationCall) {
    this._call = call;
  }

  get implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddImplementationCall__Outputs {
  _call: AddImplementationCall;

  constructor(call: AddImplementationCall) {
    this._call = call;
  }
}

export class CreateCohortCall extends ethereum.Call {
  get inputs(): CreateCohortCall__Inputs {
    return new CreateCohortCall__Inputs(this);
  }

  get outputs(): CreateCohortCall__Outputs {
    return new CreateCohortCall__Outputs(this);
  }
}

export class CreateCohortCall__Inputs {
  _call: CreateCohortCall;

  constructor(call: CreateCohortCall) {
    this._call = call;
  }

  get initData(): CreateCohortCallInitDataStruct {
    return changetype<CreateCohortCallInitDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get implementationSelector(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateCohortCall__Outputs {
  _call: CreateCohortCall;

  constructor(call: CreateCohortCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateCohortCallInitDataStruct extends ethereum.Tuple {
  get membershipCriteria(): Address {
    return this[0].toAddress();
  }

  get stakingAsset(): Address {
    return this[1].toAddress();
  }

  get daoTreasury(): Address {
    return this[2].toAddress();
  }

  get admin1(): Address {
    return this[3].toAddress();
  }

  get admin2(): Address {
    return this[4].toAddress();
  }

  get cohortSize(): BigInt {
    return this[5].toBigInt();
  }

  get joinDuration(): BigInt {
    return this[6].toBigInt();
  }

  get shareThreshold(): BigInt {
    return this[7].toBigInt();
  }

  get assetAmount(): BigInt {
    return this[8].toBigInt();
  }

  get stakeDuration(): BigInt {
    return this[9].toBigInt();
  }

  get topHatId(): BigInt {
    return this[10].toBigInt();
  }

  get cohortName(): string {
    return this[11].toString();
  }

  get sbtName(): string {
    return this[12].toString();
  }

  get sbtSymbol(): string {
    return this[13].toString();
  }

  get baseUri(): string {
    return this[14].toString();
  }

  get shamanOn(): boolean {
    return this[15].toBoolean();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateHatsProtocolCall extends ethereum.Call {
  get inputs(): UpdateHatsProtocolCall__Inputs {
    return new UpdateHatsProtocolCall__Inputs(this);
  }

  get outputs(): UpdateHatsProtocolCall__Outputs {
    return new UpdateHatsProtocolCall__Outputs(this);
  }
}

export class UpdateHatsProtocolCall__Inputs {
  _call: UpdateHatsProtocolCall;

  constructor(call: UpdateHatsProtocolCall) {
    this._call = call;
  }

  get _hatsProtocol(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateHatsProtocolCall__Outputs {
  _call: UpdateHatsProtocolCall;

  constructor(call: UpdateHatsProtocolCall) {
    this._call = call;
  }
}

export class UpdateSustainabilityFeeCall extends ethereum.Call {
  get inputs(): UpdateSustainabilityFeeCall__Inputs {
    return new UpdateSustainabilityFeeCall__Inputs(this);
  }

  get outputs(): UpdateSustainabilityFeeCall__Outputs {
    return new UpdateSustainabilityFeeCall__Outputs(this);
  }
}

export class UpdateSustainabilityFeeCall__Inputs {
  _call: UpdateSustainabilityFeeCall;

  constructor(call: UpdateSustainabilityFeeCall) {
    this._call = call;
  }

  get _sustainabilityFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateSustainabilityFeeCall__Outputs {
  _call: UpdateSustainabilityFeeCall;

  constructor(call: UpdateSustainabilityFeeCall) {
    this._call = call;
  }
}

export class UpdateSustainabilityTreasuryCall extends ethereum.Call {
  get inputs(): UpdateSustainabilityTreasuryCall__Inputs {
    return new UpdateSustainabilityTreasuryCall__Inputs(this);
  }

  get outputs(): UpdateSustainabilityTreasuryCall__Outputs {
    return new UpdateSustainabilityTreasuryCall__Outputs(this);
  }
}

export class UpdateSustainabilityTreasuryCall__Inputs {
  _call: UpdateSustainabilityTreasuryCall;

  constructor(call: UpdateSustainabilityTreasuryCall) {
    this._call = call;
  }

  get _sustainabilityTreasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateSustainabilityTreasuryCall__Outputs {
  _call: UpdateSustainabilityTreasuryCall;

  constructor(call: UpdateSustainabilityTreasuryCall) {
    this._call = call;
  }
}
